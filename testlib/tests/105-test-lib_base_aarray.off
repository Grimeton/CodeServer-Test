#!/usr/bin/env bash
#
# ----------------------------------------------------------------------------
# "THE BEER-WARE LICENSE" (Revision 42):
# <grimeton@gmx.net> wrote this file. As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think
# this stuff is worth it, you can buy me a beer in return, Grimeton.
#
# The license text was written by <phk@FreeBSD.ORG> - Poul-Henning Kamp
# ----------------------------------------------------------------------------
#
if ! (return 0 2>/dev/null); then
    echo "THIS IS A LIBRARY FILE AND SHOULD NOT BE CALLED DIRECTLY. '($(realpath "${0}"))'"
    exit 254
fi

#####
#
# - lib_base_aarray.sh
#
__tlogls lib_base_aarray

#####
#
# - __aarray_exists
#
__tlogfs __aarray_exists

__tlogts "Error 101 - Missing argument."
__tlogtsig 101 $(__aarray_exists)

__tlogts "Error 1 - None existing array."
__tlogtsig 1 $(__aarray_exists __FOO_ARRAY_NAME)

__tlogts "Error 1 - Existing variable, empty"
__tlogtsig 1 $(
    declare __TEST_ARRRAY=""
    __aarray_exists __TEST_ARRAY
)

__tlogts "Error 1 - Existing variable, String"
__tlogtsig 1 $(
    declare __TEST_ARRAY="SOMETHINGSOMETHING"
    __aarray_exists __TEST_ARRAY
)

__tlogts "Error 1 - Existing non associative array, empty"
__tlogtsig 1 $(
    declare -a __TEST_ARRAY=()
    __aarray_exists __TEST_ARRAY
)

__tlogts "Error 1 - Existing non associative array, filled"
__tlogtsig 1 $(
    declare -a __TEST_ARRAY=(1 2 3 4 5)
    __aarray_exists __TEST_ARRAY
)

__tlogts "Error 0 - Existing associative array,empty."
__tlogtsig 0 $(
    declare -A __TEST_ARRAY=()
    __aarray_exists __TEST_ARRAY
)

__tlogts "Error 0 - Existing associative array,filled."
__tlogtsig 0 $(
    declare -A __TEST_ARRAY=()
    __aarray_exists __TEST_ARRAY
)

__tlogts "Error 1 - Existing nameref,empty."
__tlogtsig 1 $(
    declare -A __TEST_ARRAY=()
    declare -n __TEST_ARRAY_NAMEREF="__TEST_ARRAY"
    __aarray_exists __TEST_ARRAY_NAMEREF
)
#####
#
# - __aarray_empty
#

__tlogfs __aarray_empty

__tlogts "Error 101 - Missing argument."
__tlogtsig 101 $(__aarray_empty)

__tlogts "Error 101 - Wrong argument."
__tlogtsig 101 $(__aarray_empty __MISSING_ARRAY)

__tlogts "Error 0 - Existing aarray, empty."
__tlogtsig 0 $(
    declare -A __TEST_ARRAY=()
    __aarray_empty __TEST_ARRAY
)

__tlogts "Error 1 - Existing aarray, filled."
__tlogtsig 1 $(
    declare -A __TEST_ARRAY=([0]=a [1]=b [2]=c)
    __aarray_empty __TEST_ARRAY
)

#####
#
# - __aarray_contains_key
#

__tlogfs __aarray_contains_key

__tlogts "Error 101 - Missing argument."
__tlogtsig 101 $(__aarray_contains_key)

__tlogts "Error 101 - Wrong argument."
__tlogtsig 101 $(__aarray_contains_key __SOME_MISSING_ARRAY)

__tlogts "Error 102 - Existing aarray, missing key."
__tlogtsig 102 $(
    declare -A __TEST_ARRAY=()
    __aarray_contains_key __TEST_ARRAY
)

__tlogts "Error 111 - Empty aarray."
__tlogtsig 111 $(
    declare -A __TEST_ARRAY=()
    __aarray_contains_key __TEST_ARRAY SOMEKEY
)

__tlogts "Error 1 - Key not in aarray."
__tlogtsig 1 $(
    declare -A __TEST_ARRAY=([key1]=abc [key2]=def)
    __aarray_contains_key __TEST_ARRAY SOMEKEY
)

__tlogts "Error 0 - Key in aarray."
__tlogtsig 0 $(
    declare -A __TEST_ARRAY=([key1]=abc [key2]=def [SOMEKEY]=ghi)
    __aarray_contains_key __TEST_ARRAY SOMEKEY
)

#####
#
# - __aarray_add
#
__tlogfs __aarray_add

__tlogts "Error 101 - Missing argument."
__tlogtsig 101 $(__aarray_add)

__tlogts "Error 101 - Wrong argument."
__tlogtsig 101 $(__aarray_add __MISSING_ARRAY)

__tlogts "Error 102 - Missing key."
__tlogtsig 102 $(
    declare -A __TEST_ARRAY=()
    __aarray_add __TEST_ARRAY
)

__tlogts "Error 1 - Key already exists."
__tlogtsig 1 $(
    declare -A __TEST_ARRAY=([a]=1 [b]=2 [c]=3 [d]=4 [e]=5)
    __aarray_add __TEST_ARRAY c 10
)

__tlogts "Error 0 - Existing aarray, non existant key."
__tlogtsig 0 $(
    declare -A __TEST_ARRAY=()
    if __aarray_add __TEST_ARRAY c 10; then
        if [[ -z ${__TEST_ARRAY[c]+x} ]]; then
            exit 1
        elif [[ "${__TEST_ARRAY[c]}x" == "10x" ]]; then
            exit 0
        else
            exit 203
        fi
    else
        exit 202
    fi
)

#####
#
# - __aarray_add_always
#
__tlogfs __aarray_add_always

__tlogts "Error 101 - Missing argument."
__tlogtsig 101 $(__aarray_add_always)

__tlogts "Error 101 - Wrong argument."
__tlogtsig 101 $(__aarray_add_always __MISSING_ARRAY)

__tlogts "Error 102 - Missing key."
__tlogtsig 102 $(
    declare -A __TEST_ARRAY=()
    __aarray_add_always __TEST_ARRAY
)

__tlogts "Error 0 - Existing aarray, existing key."
__tlogtsig 0 $(
    declare -A __TEST_ARRAY=([a]=1 [b]=2 [c]=3 [d]=4)
    if __aarray_add_always __TEST_ARRAY c 10; then
        if [[ "${__TEST_ARRAY[c]}" == "10" ]]; then
            exit 0
        else
            exit 1
        fi
    else
        exit 202
    fi
)
#####
#
# - __aarray_contains_value
#
__tlogfs __aarray_contains_value

__tlogts "Error 101 - Missing argument."
__tlogtsig 101 $(__aarray_contains_value)

__tlogts "Error 101 - Wrong argument."
__tlogtsig 101 $(__aarray_contains_value __MISSING_ARRAY)

__tlogts "Error 111"
__tlogtsig 111 $(
    declare -A __TEST_ARRAY=()
    __aarray_contains_value __TEST_ARRAY
)

__tlogts "Error 1 - Aarray does not contain value."
__tlogtsig 1 $(
    declare -A __TEST_ARRAY=([a]=1 [b]=2 [c]=3)
    __aarray_contains_value __TEST_ARRAY SOMEVALUE
)

__tlogts "Error 0 - Aarray contains value."
__tlogtsig 0 $(
    declare -A __TEST_ARRAY=([a]=1 [b]=2 [c]=3 [SOMEKEY]=SOMEVALUE)
    __aarray_contains_value __TEST_ARRAY SOMEVALUE
)

#####
#
# - __aarray_get_key
#

__tlogfs __aarray_get_key

__tlogts "Error 101 - Missing argument."
__tlogtsig 101 $(__aarray_get_key)

__tlogts "Error 101 - Wrong argument."
__tlogtsig 101 $(__aarray_get_key __SOME_MISSING_ARRAY)

__tlogts "Error 102 - Missing key in argument."
__tlogtsig 102 $(
    declare -A __TEST_ARRAY=()
    __aarray_get_key __TEST_ARRAY
)

__tlogts "Error 111 - Aarray is empty."
__tlogtsig 111 $(
    declare -A __TEST_ARRAY=()
    __aarray_get_key __TEST_ARRAY __SOME_VALUE
)

__tlogts "Error 1 - Key not found."
__tlogtsig 1 $(
    declare -A __TEST_ARRAY=([a]=1 [b]=2 [c]=3)
    __aarray_get_key __TEST_ARRAY __MISSING_KEY
)

__tlogts "Error 0 - Found keys via stdout."
__tlogtsig 0 $(
    declare -A __TEST_ARRAY=([a]=0 [b]=1 [c]=2 [d]=2 [e]=2)
    if __T_RESULT="$(__aarray_get_key __TEST_ARRAY "2")"; then
        if [[ "${__T_RESULT}" != "c d e" ]]; then
            exit 1
        else
            exit 0
        fi
    else
        exit 201
    fi
)

__tlogts "Error 0 - Found keys via out parameter."
__tlogtsig 0 $(
    declare -A __TEST_ARRAY=([a]=0 [b]=1 [c]=2 [d]=2 [e]=2)
    declare -a __T_RET_OUT=()
    if __aarray_get_key __TEST_ARRAY 2 __T_RET_OUT; then
        if [[ ${#__T_RET_OUT[@]} -gt 0 ]]; then
            for __T_RET in "${__T_RET_OUT[@]}"; do
                case "${__T_RET}" in
                c | d | e)
                    true
                    ;;
                *)
                    return 1
                    ;;
                esac
            done
        else
            return 201
        fi
    else
        return 202
    fi
    return 0
)

#####
#
# - __aarray_get_value
#

__tlogfs __aarray_get_value

__tlogts "Error 101 - Missing argument."
__tlogtsig 101 $(__aarray_get_value)

__tlogts "Error 101 - Wrong argument."
__tlogtsig 101 $(__aarray_get_value __MISSING_ARRAY)

__tlogts "Error 102 - Missing key."
__tlogtsig 102 $(
    declare -A __TEST_ARRAY=()
    __aarray_get_value __TEST_ARRAY
)

__tlogts "Error 111 - Aarray is empty."
__tlogtsig 111 $(
    declare -A __TEST_ARRAY=()
    __aarray_get_value __TEST_ARRAY __SOME_KEY
)

__tlogts "Error 1 - Key not found."
__tlogtsig 1 $(
    declare -A __TEST_ARRAY=([a]=1 [b]=2 [c]=3 [d]=4)
    __aarray_get_value __TEST_ARRAY __MISSING_KEY
)

__tlogts "Error 0, Key found, value via stdout."
__tlogtsig 0 $(
    declare -A __TEST_ARRAY=([a]=1 [b]=2 [c]=3 [d]=4)
    declare __T_RESULT=""
    if __T_RESULT="$(__aarray_get_value __TEST_ARRAY d)"; then
        if [[ "${__T_RESULT}" == "4" ]]; then
            exit 0
        else
            exit 1
        fi
    else
        exit 201
    fi
)

#####
#
# - __aarray_remove_key
#
__tlogfs __aarray_remove_key

__tlogts "Error 101 - Missing argument."
__tlogtsig 101 $(__aarray_remove_key)

__tlogts "Error 101 - Wrong argument."
__tlogtsig 101 $(__aarray_remove_key __MISSING_ARRAY)

__tlogts "Error 102 - Missing key."
__tlogtsig 102 $(
    declare -A __TEST_ARRAY=()
    __aarray_remove_key __TEST_ARRAY
)

__tlogts "Error 111 - Aarray is empty."
__tlogtsig 111 $(
    declare -A __TEST_ARRAY=()
    __aarray_remove_key __TEST_ARRAY __SOME_KEY
)

__tlogts "Error 122 - Key not found."
__tlogtsig 122 $(
    declare -A __TEST_ARRAY=([a]=1 [b]=2 [c]=3 [d]=4)
    __aarray_remove_key __TEST_ARRAY __MISSING_KEY
)

__tlogts "Error 0 - Key exists and is successfully removed."
__tlogtsig 0 $(
    declare -A __TEST_ARRAY=([a]=1 [b]=2 [c]=3 [d]=4)
    if __aarray_remove_key __TEST_ARRAY d; then
        if [[ -z ${__TEST_ARRAY[d]+x} ]]; then
            exit 0
        else
            exit 1
        fi
    else
        exit 201
    fi
)

#####
#
# - __aarray_remove_value
#

__tlogfs __aarray_remove_value

__tlogts "Error 101 - Missing argument."
__tlogtsig 101 $(__aarray_remove_value)

__tlogts "Error 101 - Wrong argument."
__tlogtsig 101 $(__aarray_remove_value __MISSING_ARRAY)

__tlogts "Error 111 - Aarray is empty."
__tlogtsig 111 $(
    declare -A __TEST_ARRAY=()
    __aarray_remove_value __TEST_ARRAY
)

__tlogts "Error 0 - Existing array/keys."
__tlogtsig 0 $(
    declare -A __TEST_ARRAY=([a]=1 [b]=1 [c]=2 [d]=2 [e]=2)
    if __aarray_remove_value __TEST_ARRAY 2; then
        for __T_VALUE in "${__TEST_ARRAY[@]}"; do
            if [[ "${__T_VALUE}" == "2" ]]; then
                exit 1
            fi
        done
        exit 0
    else
        exit 201
    fi
)

__tlogts "Error - Existing array/keys. Using OUT parameter."
__tlogtsig 0 $(
    declare -A __TEST_ARRAY=([a]=1 [b]=1 [c]=2 [d]=2 [e]=2)
    declare -a __T_RET_EXPECTED=()
    declare -a __T_RET_OUT=()
    for __T_KEY in "${!__TEST_ARRAY[@]}"; do
        if [[ "${__TEST_ARRAY[${__T_KEY}]}" == "2" ]]; then
            __T_RET_EXPECTED+=("${__T_KEY}")
        fi
    done

    if __aarray_remove_value __TEST_ARRAY 2 __T_RET_OUT; then
        for __T_KEY in "${__T_RET_EXPECTED[@]}"; do
            if [[ -n ${__TEST_ARRAY+x} ]]; then
                exit 201
            fi
        done

        if [[ ${#__T_RET_EXPECTED[@]} -ne ${#__T_RET_OUT[@]} ]]; then
            exit 202
        fi

        for __T_KEY in "${__T_RET_EXPECTED[@]}"; do
            if ! __array_contains __T_RET_OUT "${__T_KEY}"; then
                exit 203
            fi
        done
    else
        exit 211
    fi
)
__tlogfe
__tlogle
