#!/usr/bin/env bash
#
# ----------------------------------------------------------------------------
# "THE BEER-WARE LICENSE" (Revision 42):
# <grimeton@gmx.net> wrote this file. As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think
# this stuff is worth it, you can buy me a beer in return, Grimeton.
#
# The license text was written by <phk@FreeBSD.ORG> - Poul-Henning Kamp
# ----------------------------------------------------------------------------
#
if ! (return 0 2>/dev/null); then
    echo "THIS IS A LIBRARY FILE AND SHOULD NOT BE CALLED DIRECTLY. '($(realpath "${0}"))'"
    exit 254
fi

#####
#
# - BEGIN: lib_base_config.sh
#

__tlogls lib_base_config
#####
#
# - __config_distribution_find
#
__tlogfs __config_distribution_find
__tlogts "Error 0 - Testing with valid distribution info...\n"
__tlogtsig 0 $(
    declare -i __X_DISTRIBUTIONS_EXPECTED=1
    declare -i __X_ERROR=0
    declare -a __X_RET_ARRAY=()
    declare -A __X_TEST_VALUES=(
        [ID]="ubuntu"
        [NAME]="Ubuntu"
        [VERSION_ID]="16.04"
        [VERSION_CODENAME]="xenial"
        [COMPRESSION]="gz"
        [COMMENT]=""
    )

    if __config_distribution_find \
        "${__X_TEST_VALUES[ID]}" \
        "${__X_TEST_VALUES[NAME]}" \
        "${__X_TEST_VALUES[VERSION_ID]}" \
        "${__X_TEST_VALUES[VERSION_CODENAME]}" \
        "${__X_TEST_VALUES[COMPRESSION]}" \
        "${__X_TEST_VALUES[COMMENT]}" \
        __X_RET_ARRAY; then

        for __X_DINFO in "${__X_RET_ARRAY[@]}"; do
            if __aarray_exists "${__X_DINFO}"; then
                declare -n __X_RA="${__X_DINFO}"
            else
                continue
            fi

            for __X_NAME in ID NAME VERSION_ID VERSION_CODENAME COMPRESSION COMMENT; do
                if [[ -z ${__X_RA[${__X_NAME}]+x} ]]; then
                    exit 201
                fi
                if [[ ${__X_TEST_VALUES[${__X_NAME}]+x} ]]; then
                    if [[ "${__X_RA[${__X_NAME}]}x" == "${__X_TEST_VALUES[${__X_NAME}]}x" ]]; then
                        true
                    else
                        exit 202
                    fi
                else
                    true
                fi
            done
        done
        exit 0
    else
        if [[ ${__X_DISTRIBUTIONS_EXPECTED} -eq 0 ]]; then
            exit 0
        else
            exit 211
        fi
    fi
)

__tlogts "Error 1 - Faulty distribution information, expecting 0 returns."
__tlogtsig 1 $(
    declare -a __X_RET_ARRAY=()
    declare -A __X_TEST_VALUES=(
        [ID]="blububuntu"
        [NAME]="Ubuntu"
        [VERSION_ID]="16.04"
        [VERSION_CODENAME]="xenial"
        [COMPRESSION]="gz"
        [COMMENT]=""
    )

    __config_distribution_find \
        "${__X_TEST_VALUES[ID]}" \
        "${__X_TEST_VALUES[NAME]}" \
        "${__X_TEST_VALUES[VERSION_ID]}" \
        "${__X_TEST_VALUES[VERSION_CODENAME]}" \
        "${__X_TEST_VALUES[COMPRESSION]}" \
        "${__X_TEST_VALUES[COMMENT]}" \
        __X_RET_ARRAY
)

#####
#
# - __config_distribution_verify
#
__tlogfs __config_distribution_verify
__tlogts "Error 0 - Testing with current distribution info."
__tlogtsig 0 $(
    declare -i __X_DISTRIBUTIONS_EXPECTED=1
    declare -i __X_ERROR=0
    declare -a __X_RET_ARRAY=()
    declare -A __X_TEST_VALUES=()

    for __X_VNAME in ID NAME VERSION_ID VERSION_CODENAME COMPRESSION COMMENT; do
        if [[ "${!__X_VNAME+x}x" == "x" ]]; then
            __X_TEST_VALUES[${__X_VNAME}]=""
        else
            __X_TEST_VALUES[${__X_VNAME}]="${!__X_VNAME}"
        fi
    done

    if __config_distribution_verify \
        "${__X_TEST_VALUES[ID]}" \
        "${__X_TEST_VALUES[NAME]}" \
        "${__X_TEST_VALUES[VERSION_ID]}" \
        "${__X_TEST_VALUES[VERSION_CODENAME]}" \
        "${__X_TEST_VALUES[COMPRESSION]}" \
        "${__X_TEST_VALUES[COMMENT]}" \
        __X_RET_ARRAY; then

        for __X_DINFO in "${__X_RET_ARRAY[@]}"; do
            if __aarray_exists "${__X_DINFO}"; then
                declare -n __X_RA="${__X_DINFO}"
            else
                continue
            fi

            for __X_NAME in ID NAME VERSION_ID VERSION_CODENAME COMPRESSION COMMENT; do
                if [[ -z ${__X_RA[${__X_NAME}]+x} ]]; then
                    exit 201
                fi
                if [[ ${__X_TEST_VALUES[${__X_NAME}]+x} ]] && [[ "${__X_TEST_VALUES[${__X_NAME}]}x" != "x" ]]; then
                    if [[ "${__X_RA[${__X_NAME}]}x" == "${__X_TEST_VALUES[${__X_NAME}]}x" ]]; then
                        true
                    else
                        exit 202
                    fi
                else
                    true
                fi
            done
        done
    else
        exit 203
    fi
)

__tlogts "Error 1 - Testing with invalid distribution information."
__tlogtsig 1 $(
    declare -i __X_DISTRIBUTIONS_EXPECTED=0
    declare -a __X_RET_ARRAY=()
    declare -A __X_TEST_VALUES=()

    for __X_VNAME in ID NAME VERSION_ID VERSION_CODENAME COMPRESSION COMMENT; do
        if [[ "${!__X_VNAME+x}x" == "x" ]]; then
            __X_TEST_VALUES[${__X_VNAME}]=""
        else
            __X_TEST_VALUES[${__X_VNAME}]="${!__X_VNAME}"
        fi
    done
    __X_TEST_VALUES[NAME]="BLUBB"

    __config_distribution_verify \
        "${__X_TEST_VALUES[ID]}" \
        "${__X_TEST_VALUES[NAME]}" \
        "${__X_TEST_VALUES[VERSION_ID]}" \
        "${__X_TEST_VALUES[VERSION_CODENAME]}" \
        "${__X_TEST_VALUES[COMPRESSION]}" \
        "${__X_TEST_VALUES[COMMENT]}" \
        __X_RET_ARRAY
)
__tlogfe

#####
#
# - __config_distribution_get
#
__tlogfs __config_distribution_get

__tlogts "Error 1 - Working with bogus information, expecting nothing back."
__tlogtsig 1 $(
    declare -A __X_RET_ARRAY=()
    declare -A __X_TEST_VALUES=()

    for __X_VNAME in ID NAME VERSION_ID VERSION_CODENAME COMPRESSION COMMENT; do
        if [[ "${!__X_VNAME+x}x" == "x" ]]; then
            __X_TEST_VALUES[${__X_VNAME}]=""
        else
            __X_TEST_VALUES[${__X_VNAME}]="${!__X_VNAME}"
        fi
    done
    __X_TEST_VALUES[NAME]="BLUBB"
    __config_distribution_get \
        "${__X_TEST_VALUES[ID]}" \
        "${__X_TEST_VALUES[NAME]}" \
        "${__X_TEST_VALUES[VERSION_ID]}" \
        "${__X_TEST_VALUES[VERSION_CODENAME]}" \
        "${__X_TEST_VALUES[COMPRESSION]}" \
        "${__X_TEST_VALUES[COMMENT]}" \
        __X_RET_ARRAY
)

__tlogts "Error 0 - Testing with valid information. Expecting returns."
__tlogtsig 0 $(

    declare -A __X_RET_ARRAY=()
    declare -A __X_TEST_VALUES=()

    for __X_VNAME in ID NAME VERSION_ID VERSION_CODENAME COMPRESSION COMMENT; do
        if [[ "${!__X_VNAME+x}x" == "x" ]]; then
            __X_TEST_VALUES[${__X_VNAME}]=""
        else
            __X_TEST_VALUES[${__X_VNAME}]="${!__X_VNAME}"
        fi
    done

    if __config_distribution_get \
        "${__X_TEST_VALUES[ID]}" \
        "${__X_TEST_VALUES[NAME]}" \
        "${__X_TEST_VALUES[VERSION_ID]}" \
        "${__X_TEST_VALUES[VERSION_CODENAME]}" \
        "${__X_TEST_VALUES[COMPRESSION]}" \
        "${__X_TEST_VALUES[COMMENT]}" \
        __X_RET_ARRAY; then
        declare -n __X_RA="__X_RET_ARRAY"
        for __X_NAME in ID NAME VERSION_ID VERSION_CODENAME COMPRESSION COMMENT; do
            if [[ -z ${__X_RA[${__X_NAME}]+x} ]]; then
                exit 201
            fi
            if [[ ${__X_TEST_VALUES[${__X_NAME}]+x} ]] && [[ "${__X_TEST_VALUES[${__X_NAME}]}x" != "x" ]]; then
                if [[ "${__X_RA[${__X_NAME}]}x" == "${__X_TEST_VALUES[${__X_NAME}]}x" ]]; then
                    true
                else
                    exit 202
                fi
            else
                true
            fi
        done
        exit 0
    else
        exit 203
    fi
)
